package htmxer

import (
	"fmt"
)

templ header() {
	@nav()
}

templ nav() {
	<nav class="flex">
		<div class="p-10">
			<a class="text-xl font-bold mr-10" href="/">home</a>
			<a class="text-xl " href="/users">users</a>
		</div>
	</nav>
}

templ footer() {
	<footer class="bottom-0 absolute">
		footer
	</footer>
}

templ homePage() {
	@baseLayout("home") {
		<div>
			This is a homepage.
		</div>
	}
}

templ usersListPage(users []*User) {
	@baseLayout("pages") {
		<div class="w-full">
			for _, u := range users {
				@userLink(u)
			}
			<div class="flex flex-col items-center ">
				<a
 					class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
 					href={ templ.SafeURL("/users/new") }
				>
					Add new user
				</a>
			</div>
		</div>
	}
}

templ userPage(user *User, userExists bool) {
	@baseLayout("user") {
		<div id="user-page" hx-swap="outerHTML">
			if userExists {
				@userView(user)
			} else {
				@userNotFound()
			}
		</div>
	}
}

templ editUserPage(user *User, editUser, newUser bool) {
	@baseLayout("edit user") {
		<div id="edit-page" hx-swap="outerHTML">
			if editUser {
				@userForm(user, true)
			} else if newUser {
				@userForm(&User{}, false)
			} else {
				@userNotFound()
			}
		</div>
	}
}

templ userNotFound() {
	<div class="grid min-h-full place-items-center bg-white px-6 py-24 sm:py-32 lg:px-8">
		<div class="text-center">
			<p class="text-base font-semibold text-indigo-600">404</p>
			<h1 class="mt-4 text-3xl font-bold tracking-tight text-gray-900 sm:text-5xl">User not found</h1>
			<p class="mt-6 text-base leading-7 text-gray-600">Oopsie.</p>
			<div class="mt-20 flex items-center justify-center gap-x-6">
				<a
 					href={ templ.SafeURL("/users") }
 					class="rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline"
				>
					Go back home 
				</a>
				<a
 					class="rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline"
 					href={ templ.SafeURL("/users/new") }
				>
					Add new user
				</a>
			</div>
		</div>
	</div>
}

templ userDeleted() {
	<div class="grid min-h-full place-items-center bg-white px-6 py-24 sm:py-32 lg:px-8">
		<div class="text-center">
			<p class="text-base font-semibold text-indigo-600">whoa...</p>
			<h1 class="mt-4 text-3xl font-bold tracking-tight text-gray-900 sm:text-5xl">User deleted</h1>
			<p class="mt-6 text-base leading-7 text-gray-600">It's okay, you can make more.</p>
			<div class="mt-20 flex items-center justify-center gap-x-6">
				<a
 					href={ templ.SafeURL("/users") }
 					class="rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline"
				>
					Go back home 
				</a>
				<a
 					class="rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline"
 					href={ templ.SafeURL("/users/new") }
				>
					Add new user
				</a>
			</div>
		</div>
	</div>
}

templ userLink(user *User) {
	<div class="border border-gray-400 lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 m-1 flex flex-col justify-between leading-normal">
		<a href={ templ.SafeURL(fmt.Sprintf("/users/%s", user.ID)) }>
			<div class="mb-8">
				<div class="text-gray-700 hover:text-gray-900 font-bold text-xl mb-2">
					{ user.Name }
				</div>
				<p class="text-gray-700 text-base">
					{ user.Description }
				</p>
			</div>
		</a>
	</div>
}

templ userView(user *User) {
	<div>
		<div class="w-full max-w-sm">
			<div class="md:flex md:items-center mb-6">
				<div class="md:w-1/3">
					<div class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
						Name
					</div>
				</div>
				<div class="md:w-2/3">
					<div class="bg-gray-100 rounded w-full py-2 px-4 text-black leading-tight focus:outline-none focus:bg-white focus:border-purple-500">
						{ user.Name }
					</div>
				</div>
			</div>
			<div class="md:flex md:items-center mb-6">
				<div class="md:w-1/3">
					<div class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
						Description
					</div>
				</div>
				<div class="md:w-2/3">
					<div class="bg-gray-100 rounded w-full py-2 px-4 text-black leading-tight focus:outline-none focus:bg-white focus:border-purple-500">
						{ user.Description }
					</div>
				</div>
			</div>
			// Age
			<div class="md:flex md:items-center mb-6">
				<div class="md:w-1/3">
					<div class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
						Age
					</div>
				</div>
				<div class="md:w-2/3">
					<div
 						class="bg-gray-100 rounded w-full py-2 px-4 text-black leading-tight focus:outline-none focus:bg-white focus:border-purple-500"
					>
						{ fmt.Sprintf("%d", user.Age) }
					</div>
				</div>
			</div>
			<div class="flex flex-col items-center ">
				<div class="inline-flex">
					<button
 						class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l"
 						hx-delete={ fmt.Sprintf("/users/%s", user.ID) }
 						hx-target="#user-page"
 						hx-push-url="true"
					>
						Delete
					</button>
					<a
 						class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-r"
 						href={ templ.SafeURL(fmt.Sprintf("/users/%s/edit", user.ID)) }
					>
						Edit
					</a>
				</div>
			</div>
		</div>
	</div>
}

templ userForm(user *User, existingUser bool) {
	<div id="user-form">
		<form class="w-full max-w-sm">
			<div class="md:flex md:items-center mb-6">
				<div class="md:w-1/3">
					<label
 						class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
 						for="name"
					>
						Name
					</label>
				</div>
				<div class="md:w-2/3">
					<input
 						class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500"
 						name="name"
 						value={ user.Name }
					/>
				</div>
			</div>
			<div class="md:flex md:items-center mb-6">
				<div class="md:w-1/3">
					<label
 						class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
 						for="description"
					>
						Description
					</label>
				</div>
				<div class="md:w-2/3">
					<input
 						class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500"
 						name="description"
 						value={ user.Description }
					/>
				</div>
			</div>
			<div class="md:flex md:items-center mb-6">
				<div class="md:w-1/3">
					<label
 						class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
 						for="age"
					>
						Age
					</label>
				</div>
				<div class="md:w-2/3">
					<input
 						class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500"
 						name="age"
 						value={ fmt.Sprintf("%d", user.Age) }
					/>
				</div>
			</div>
			<div class="flex flex-col items-center ">
				<div class="inline-flex">
					if existingUser {
						<button
 							class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l"
 							hx-get={ fmt.Sprintf("/users/%s/view", user.ID) }
 							hx-target="#edit-page"
						>
							Cancel
						</button>
						<button
 							class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-r"
 							hx-put={ fmt.Sprintf("/users/%s", user.ID) }
 							hx-target="#edit-page"
 							hx-push-url="true"
						>
							Save
						</button>
					} else {
						<a
 							class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l"
 							href={ templ.SafeURL("/users") }
						>Cancel</a>
						<button
 							class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-r"
 							hx-post="/users"
 							hx-target="#edit-page"
						>
							Save
						</button>
					}
				</div>
			</div>
		</form>
	</div>
}
